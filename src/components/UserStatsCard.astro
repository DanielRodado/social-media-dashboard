---
interface Props {
    username: string;
    followers: number | string;
    typeOfSocialNetwork: string;
    followersChange: number;
    increase: boolean
}

const { username, followers, followersChange, typeOfSocialNetwork, increase } = Astro.props;
---

<div class="relative bg-neutralLightTheme-light-grayish-blue-card-bg rounded-md flex flex-col items-center justify-center gap-5 p-6 hover:bg-neutralLightTheme-light-grayish-blue-card-hover-bg dark:bg-neutralDarkTheme-dark-desaturated-blue-card-bg dark:hover:bg-neutralDarkTheme-dark-desaturated-blue-card-hover-bg">
    <div class:list={[
        "absolute top-0 w-full h-2 rounded-t-md ",
        {
            "bg-primary-facebook": typeOfSocialNetwork === "facebook",
            "bg-primary-twitter": typeOfSocialNetwork === "twitter",
            "bg-primary-youtube": typeOfSocialNetwork === "youtube",
            "bg-instagram": typeOfSocialNetwork === "instagram",
        }
    ]}></div>
    <div class="flex gap-2">
        <img src={`/assets/images/icon-${typeOfSocialNetwork}.svg`} alt={typeOfSocialNetwork}>
        <p class="text-neutralLightTheme-dark-grayish-blue-text text-sm font-bold dark:text-neutralDarkTheme-desaturated-blue-text">{typeOfSocialNetwork === "youtube" ? "" : "@"}{username}</p>
    </div>
    <div class="text-center">
        <p class="text-6xl font-bold dark:text-neutralDarkTheme-white-text">{typeof followers === "number" ? followers.toLocaleString() : followers}</p>
        <p class="text-neutralLightTheme-dark-grayish-blue-text uppercase tracking-[0.3rem] dark:text-neutralDarkTheme-desaturated-blue-text">{typeOfSocialNetwork === "youtube" ? "subscribers" : "followers"}</p>
    </div>
    <p 
        class:list={[
            "font-bold",
            {
                "text-primary-lime-green": increase,
                "text-primary-bright-red": !increase,
            }
        ]}>
        {increase ? "+" : "-"} {followersChange} Today
    </p>
</div>